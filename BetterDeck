public class BetterDeck
{
    // instance variables - replace the example below with your own
    private Card [] deck = new Card [52];

    /**
     * Constructor for objects of class BetterDeck
     */
    public BetterDeck()
    {
        deck [0] = new Card();
        for (int i = 1; i < deck.length; i++)
        {
            Card cardToTry = new Card();
            boolean repeat = false;
            for(int x = 0; x < i; x++)
            {
                if(cardToTry.getSuit().equals(deck[x].getSuit()) &&
                cardToTry.getNumber().equals(deck[x].getNumber() ))
                {
                    repeat = true;
                    x=i;
                }
            }
            if(repeat)
            {
                i--;  
            }
            else
            {
                deck[i] = cardToTry;
            }
        }
    }

    public void contents()
    {
        for(int i = 0; i < deck.length; i++)
        {
            System.out.println(deck[i].read());
        }
    }

    // This method called shuffle(int n) will loop n times, each time selecting two random cards and swapping their locations in the array.
    public void shuffle(int n)
    {
        for (int i = 0; i < n; i++)
        {
            int location1 = (int)(Math.random()*52);
            int location2 = (int)(Math.random()*52);
            if (location1 != location2)
            {
                Card temp = null;
                temp = deck[location1];
                deck[location1] = deck[location2];
                deck[location2] = temp; 
            }
        }
    }

    // method used to check the shuffle method; it will find the index of the cards so the indexes can be compared to see if they were swapped
    public void findIndex(Card card1)
    {
        for (int i = 0; i < deck.length; i++)
        {
            if (deck[i] == card1)
            {
                System.out.println(i);
            }
        }
    }
}

